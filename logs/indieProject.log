[DEBUG] 2022-11-01 14:43:11.413 [main] TaskData - The list of tasks [Task{id=1, taskName='Read Chapter 16', workTime=01:20:30'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', workTime=01:20:30'}, Task{id=3, taskName='Outline Essay', workTime=01:20:30'}, Task{id=4, taskName='Write Introduction paragraph', workTime=01:20:30'}, Task{id=5, taskName='Write 1st body paragraph', workTime=01:20:30'}, Task{id=6, taskName='Research wanted API', workTime=01:20:30'}, Task{id=7, taskName='Complete code for REST API', workTime=01:20:30'}, Task{id=8, taskName='Write note cards for presentation', workTime=01:20:30'}, Task{id=9, taskName='Find photos that match my mood!', workTime=01:20:30'}]
[DEBUG] 2022-11-01 14:43:11.505 [main] TaskData - Searching for task with taskName = Write 
[DEBUG] 2022-11-01 14:44:12.842 [main] UserData - Searching for user with lastName = Smith
[INFO ] 2022-11-01 14:44:13.290 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', password='password4', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-11-01 14:44:13.532 [main] UserData - The list of users [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', password='password1', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', numberOfTasks=2, totalWorkTime='02:41', description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', workTime=01:20:30'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', workTime=01:20:30'}]}, TaskList{id=2, listName='Write Essay For English Class', numberOfTasks=3, totalWorkTime='04:01:30', description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', workTime=01:20:30'}, Task{id=4, taskName='Write Introduction paragraph', workTime=01:20:30'}, Task{id=5, taskName='Write 1st body paragraph', workTime=01:20:30'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', password='password2', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', numberOfTasks=2, totalWorkTime='02:41', description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', workTime=01:20:30'}, Task{id=7, taskName='Complete code for REST API', workTime=01:20:30'}]}, TaskList{id=4, listName='Prep for presentation in IT class', numberOfTasks=1, totalWorkTime='01:20:30', description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', workTime=01:20:30'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', password='password3', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', numberOfTasks=1, totalWorkTime='01:20:30', description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', workTime=01:20:30'}]}]}]
[DEBUG] 2022-11-01 15:29:00.375 [main] TaskListData - Searching for taskList with user = Alex
[DEBUG] 2022-11-01 15:29:25.683 [main] TaskListData - Searching for taskList with user = 2
[DEBUG] 2022-11-01 15:30:51.921 [main] TaskListData - Searching for taskList with listName =  Class 
[DEBUG] 2022-11-01 15:31:17.450 [main] TaskListData - Searching for taskList with listName =  Class
[DEBUG] 2022-11-01 15:31:31.370 [main] TaskListData - Searching for taskList with listName =  Class
[DEBUG] 2022-11-01 15:33:46.542 [main] TaskListData - The list of taskLists [TaskList{id=1, listName='Read Book For History Class', numberOfTasks=2, totalWorkTime='02:41', description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', workTime=01:20:30'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', workTime=01:20:30'}]}, TaskList{id=2, listName='Write Essay For English Class', numberOfTasks=3, totalWorkTime='04:01:30', description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', workTime=01:20:30'}, Task{id=3, taskName='Outline Essay', workTime=01:20:30'}, Task{id=4, taskName='Write Introduction paragraph', workTime=01:20:30'}]}, TaskList{id=3, listName='Work on Indie Project', numberOfTasks=2, totalWorkTime='02:41', description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', workTime=01:20:30'}, Task{id=6, taskName='Research wanted API', workTime=01:20:30'}]}, TaskList{id=4, listName='Prep for presentation in IT class', numberOfTasks=1, totalWorkTime='01:20:30', description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', workTime=01:20:30'}]}, TaskList{id=5, listName='Design Moodboard', numberOfTasks=1, totalWorkTime='01:20:30', description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', workTime=01:20:30'}]}]
[DEBUG] 2022-11-01 15:43:12.655 [main] TaskListData - The list of taskLists [TaskList{id=1, listName='Read Book For History Class', numberOfTasks=2, totalWorkTime='02:41', description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', workTime=01:20:30'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', workTime=01:20:30'}]}, TaskList{id=2, listName='Write Essay For English Class', numberOfTasks=3, totalWorkTime='04:01:30', description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', workTime=01:20:30'}, Task{id=4, taskName='Write Introduction paragraph', workTime=01:20:30'}, Task{id=3, taskName='Outline Essay', workTime=01:20:30'}]}, TaskList{id=3, listName='Work on Indie Project', numberOfTasks=2, totalWorkTime='02:41', description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', workTime=01:20:30'}, Task{id=6, taskName='Research wanted API', workTime=01:20:30'}]}, TaskList{id=4, listName='Prep for presentation in IT class', numberOfTasks=1, totalWorkTime='01:20:30', description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', workTime=01:20:30'}]}, TaskList{id=5, listName='Design Moodboard', numberOfTasks=1, totalWorkTime='01:20:30', description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', workTime=01:20:30'}]}]
[DEBUG] 2022-11-01 15:43:12.774 [main] TaskListData - Searching for taskList with listName =  Class
[DEBUG] 2022-11-01 16:01:24.280 [main] TaskListData - The list of taskLists [TaskList{id=1, listName='Read Book For History Class', numberOfTasks=2, totalWorkTime='02:41', description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', workTime=01:20:30'}, Task{id=1, taskName='Read Chapter 16', workTime=01:20:30'}]}, TaskList{id=2, listName='Write Essay For English Class', numberOfTasks=3, totalWorkTime='04:01:30', description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', workTime=01:20:30'}, Task{id=5, taskName='Write 1st body paragraph', workTime=01:20:30'}, Task{id=4, taskName='Write Introduction paragraph', workTime=01:20:30'}]}, TaskList{id=3, listName='Work on Indie Project', numberOfTasks=2, totalWorkTime='02:41', description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', workTime=01:20:30'}, Task{id=6, taskName='Research wanted API', workTime=01:20:30'}]}, TaskList{id=4, listName='Prep for presentation in IT class', numberOfTasks=1, totalWorkTime='01:20:30', description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', workTime=01:20:30'}]}, TaskList{id=5, listName='Design Moodboard', numberOfTasks=1, totalWorkTime='01:20:30', description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', workTime=01:20:30'}]}]
[DEBUG] 2022-11-01 16:01:24.389 [main] TaskListData - Searching for taskList with listName =  Class
[DEBUG] 2022-11-01 16:01:48.825 [main] TaskData - The list of tasks [Task{id=1, taskName='Read Chapter 16', workTime=01:20:30'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', workTime=01:20:30'}, Task{id=3, taskName='Outline Essay', workTime=01:20:30'}, Task{id=4, taskName='Write Introduction paragraph', workTime=01:20:30'}, Task{id=5, taskName='Write 1st body paragraph', workTime=01:20:30'}, Task{id=6, taskName='Research wanted API', workTime=01:20:30'}, Task{id=7, taskName='Complete code for REST API', workTime=01:20:30'}, Task{id=8, taskName='Write note cards for presentation', workTime=01:20:30'}, Task{id=9, taskName='Find photos that match my mood!', workTime=01:20:30'}]
[DEBUG] 2022-11-01 16:01:48.907 [main] TaskData - Searching for task with taskName = Write 
[DEBUG] 2022-11-01 16:01:49.458 [main] TaskListData - The list of taskLists [TaskList{id=1, listName='Read Book For History Class', numberOfTasks=2, totalWorkTime='02:41', description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', workTime=01:20:30'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', workTime=01:20:30'}]}, TaskList{id=2, listName='Write Essay For English Class', numberOfTasks=3, totalWorkTime='04:01:30', description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', workTime=01:20:30'}, Task{id=3, taskName='Outline Essay', workTime=01:20:30'}, Task{id=5, taskName='Write 1st body paragraph', workTime=01:20:30'}]}, TaskList{id=3, listName='Work on Indie Project', numberOfTasks=2, totalWorkTime='02:41', description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', workTime=01:20:30'}, Task{id=6, taskName='Research wanted API', workTime=01:20:30'}]}, TaskList{id=4, listName='Prep for presentation in IT class', numberOfTasks=1, totalWorkTime='01:20:30', description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', workTime=01:20:30'}]}, TaskList{id=5, listName='Design Moodboard', numberOfTasks=1, totalWorkTime='01:20:30', description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', workTime=01:20:30'}]}]
[DEBUG] 2022-11-01 16:01:49.526 [main] TaskListData - Searching for taskList with listName =  Class
[DEBUG] 2022-11-01 16:01:49.777 [main] UserData - Searching for user with lastName = Smith
[INFO ] 2022-11-01 16:01:50.020 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', password='password4', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-11-01 16:01:50.190 [main] UserData - The list of users [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', password='password1', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', numberOfTasks=3, totalWorkTime='04:01:30', description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', workTime=01:20:30'}, Task{id=5, taskName='Write 1st body paragraph', workTime=01:20:30'}, Task{id=4, taskName='Write Introduction paragraph', workTime=01:20:30'}]}, TaskList{id=1, listName='Read Book For History Class', numberOfTasks=2, totalWorkTime='02:41', description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', workTime=01:20:30'}, Task{id=1, taskName='Read Chapter 16', workTime=01:20:30'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', password='password2', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', numberOfTasks=2, totalWorkTime='02:41', description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', workTime=01:20:30'}, Task{id=7, taskName='Complete code for REST API', workTime=01:20:30'}]}, TaskList{id=4, listName='Prep for presentation in IT class', numberOfTasks=1, totalWorkTime='01:20:30', description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', workTime=01:20:30'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', password='password3', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', numberOfTasks=1, totalWorkTime='01:20:30', description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', workTime=01:20:30'}]}]}]
[DEBUG] 2022-11-02 14:40:13.298 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', numberOfTasks=2, totalWorkTime='02:41', description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', workTime=01:20:30'}, Task{id=1, taskName='Read Chapter 16', workTime=01:20:30'}]}, TaskList{id=2, listName='Write Essay For English Class', numberOfTasks=3, totalWorkTime='04:01:30', description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', workTime=01:20:30'}, Task{id=5, taskName='Write 1st body paragraph', workTime=01:20:30'}, Task{id=4, taskName='Write Introduction paragraph', workTime=01:20:30'}]}, TaskList{id=3, listName='Work on Indie Project', numberOfTasks=2, totalWorkTime='02:41', description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', workTime=01:20:30'}, Task{id=6, taskName='Research wanted API', workTime=01:20:30'}]}, TaskList{id=4, listName='Prep for presentation in IT class', numberOfTasks=1, totalWorkTime='01:20:30', description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', workTime=01:20:30'}]}, TaskList{id=5, listName='Design Moodboard', numberOfTasks=1, totalWorkTime='01:20:30', description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', workTime=01:20:30'}]}]
[DEBUG] 2022-11-02 14:40:13.415 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-11-02 14:40:38.753 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', numberOfTasks=2, totalWorkTime='02:41', description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', workTime=01:20:30'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', workTime=01:20:30'}]}, TaskList{id=2, listName='Write Essay For English Class', numberOfTasks=3, totalWorkTime='04:01:30', description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', workTime=01:20:30'}, Task{id=4, taskName='Write Introduction paragraph', workTime=01:20:30'}, Task{id=5, taskName='Write 1st body paragraph', workTime=01:20:30'}]}, TaskList{id=3, listName='Work on Indie Project', numberOfTasks=2, totalWorkTime='02:41', description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', workTime=01:20:30'}, Task{id=6, taskName='Research wanted API', workTime=01:20:30'}]}, TaskList{id=4, listName='Prep for presentation in IT class', numberOfTasks=1, totalWorkTime='01:20:30', description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', workTime=01:20:30'}]}, TaskList{id=5, listName='Design Moodboard', numberOfTasks=1, totalWorkTime='01:20:30', description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', workTime=01:20:30'}]}]
[DEBUG] 2022-11-02 14:40:38.850 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-11-11 12:09:32.538 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', workTime=01:20:30'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', workTime=01:20:30'}, Task{id=3, taskName='Outline Essay', workTime=01:20:30'}, Task{id=4, taskName='Write Introduction paragraph', workTime=01:20:30'}, Task{id=5, taskName='Write 1st body paragraph', workTime=01:20:30'}, Task{id=6, taskName='Research wanted API', workTime=01:20:30'}, Task{id=7, taskName='Complete code for REST API', workTime=01:20:30'}, Task{id=8, taskName='Write note cards for presentation', workTime=01:20:30'}, Task{id=9, taskName='Find photos that match my mood!', workTime=01:20:30'}]
[DEBUG] 2022-11-11 12:09:32.637 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-11-11 12:09:33.219 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', numberOfTasks=2, totalWorkTime='02:41', description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', workTime=01:20:30'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', workTime=01:20:30'}]}, TaskList{id=2, listName='Write Essay For English Class', numberOfTasks=3, totalWorkTime='04:01:30', description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', workTime=01:20:30'}, Task{id=3, taskName='Outline Essay', workTime=01:20:30'}, Task{id=4, taskName='Write Introduction paragraph', workTime=01:20:30'}]}, TaskList{id=3, listName='Work on Indie Project', numberOfTasks=2, totalWorkTime='02:41', description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', workTime=01:20:30'}, Task{id=7, taskName='Complete code for REST API', workTime=01:20:30'}]}, TaskList{id=4, listName='Prep for presentation in IT class', numberOfTasks=1, totalWorkTime='01:20:30', description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', workTime=01:20:30'}]}, TaskList{id=5, listName='Design Moodboard', numberOfTasks=1, totalWorkTime='01:20:30', description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', workTime=01:20:30'}]}]
[DEBUG] 2022-11-11 12:09:33.298 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-11-11 12:09:33.583 [main] UserData - Searching for user with lastName = Smith
[INFO ] 2022-11-11 12:09:33.769 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', password='password4', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-11-11 12:09:33.942 [main] UserData - The list of users [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', password='password1', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', numberOfTasks=3, totalWorkTime='04:01:30', description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', workTime=01:20:30'}, Task{id=4, taskName='Write Introduction paragraph', workTime=01:20:30'}, Task{id=5, taskName='Write 1st body paragraph', workTime=01:20:30'}]}, TaskList{id=1, listName='Read Book For History Class', numberOfTasks=2, totalWorkTime='02:41', description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', workTime=01:20:30'}, Task{id=1, taskName='Read Chapter 16', workTime=01:20:30'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', password='password2', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', numberOfTasks=1, totalWorkTime='01:20:30', description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', workTime=01:20:30'}]}, TaskList{id=3, listName='Work on Indie Project', numberOfTasks=2, totalWorkTime='02:41', description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', workTime=01:20:30'}, Task{id=6, taskName='Research wanted API', workTime=01:20:30'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', password='password3', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', numberOfTasks=1, totalWorkTime='01:20:30', description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', workTime=01:20:30'}]}]}]
[DEBUG] 2022-11-12 10:33:14.125 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', workTime=01:20:30'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', workTime=01:20:30'}, Task{id=3, taskName='Outline Essay', workTime=01:20:30'}, Task{id=4, taskName='Write Introduction paragraph', workTime=01:20:30'}, Task{id=5, taskName='Write 1st body paragraph', workTime=01:20:30'}, Task{id=6, taskName='Research wanted API', workTime=01:20:30'}, Task{id=7, taskName='Complete code for REST API', workTime=01:20:30'}, Task{id=8, taskName='Write note cards for presentation', workTime=01:20:30'}, Task{id=9, taskName='Find photos that match my mood!', workTime=01:20:30'}]
[DEBUG] 2022-11-12 10:33:14.256 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-11-12 10:33:15.023 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', numberOfTasks=2, totalWorkTime='02:41', description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', workTime=01:20:30'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', workTime=01:20:30'}]}, TaskList{id=2, listName='Write Essay For English Class', numberOfTasks=3, totalWorkTime='04:01:30', description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', workTime=01:20:30'}, Task{id=3, taskName='Outline Essay', workTime=01:20:30'}, Task{id=4, taskName='Write Introduction paragraph', workTime=01:20:30'}]}, TaskList{id=3, listName='Work on Indie Project', numberOfTasks=2, totalWorkTime='02:41', description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', workTime=01:20:30'}, Task{id=7, taskName='Complete code for REST API', workTime=01:20:30'}]}, TaskList{id=4, listName='Prep for presentation in IT class', numberOfTasks=1, totalWorkTime='01:20:30', description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', workTime=01:20:30'}]}, TaskList{id=5, listName='Design Moodboard', numberOfTasks=1, totalWorkTime='01:20:30', description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', workTime=01:20:30'}]}]
[DEBUG] 2022-11-12 10:33:15.114 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-11-12 10:33:15.417 [main] UserData - Searching for user with lastName = Smith
[INFO ] 2022-11-12 10:33:15.621 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', password='password4', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-11-12 10:33:15.876 [main] UserData - The list of users [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', password='password1', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', numberOfTasks=2, totalWorkTime='02:41', description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', workTime=01:20:30'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', workTime=01:20:30'}]}, TaskList{id=2, listName='Write Essay For English Class', numberOfTasks=3, totalWorkTime='04:01:30', description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', workTime=01:20:30'}, Task{id=4, taskName='Write Introduction paragraph', workTime=01:20:30'}, Task{id=5, taskName='Write 1st body paragraph', workTime=01:20:30'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', password='password2', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', numberOfTasks=1, totalWorkTime='01:20:30', description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', workTime=01:20:30'}]}, TaskList{id=3, listName='Work on Indie Project', numberOfTasks=2, totalWorkTime='02:41', description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', workTime=01:20:30'}, Task{id=6, taskName='Research wanted API', workTime=01:20:30'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', password='password3', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', numberOfTasks=1, totalWorkTime='01:20:30', description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', workTime=01:20:30'}]}]}]
[DEBUG] 2022-11-12 10:42:38.835 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', workTime=01:20:30'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', workTime=01:20:30'}, Task{id=3, taskName='Outline Essay', workTime=01:20:30'}, Task{id=4, taskName='Write Introduction paragraph', workTime=01:20:30'}, Task{id=5, taskName='Write 1st body paragraph', workTime=01:20:30'}, Task{id=6, taskName='Research wanted API', workTime=01:20:30'}, Task{id=7, taskName='Complete code for REST API', workTime=01:20:30'}, Task{id=8, taskName='Write note cards for presentation', workTime=01:20:30'}, Task{id=9, taskName='Find photos that match my mood!', workTime=01:20:30'}]
[DEBUG] 2022-11-12 10:42:38.931 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-11-12 10:42:39.526 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', numberOfTasks=2, totalWorkTime='02:41', description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', workTime=01:20:30'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', workTime=01:20:30'}]}, TaskList{id=2, listName='Write Essay For English Class', numberOfTasks=3, totalWorkTime='04:01:30', description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', workTime=01:20:30'}, Task{id=3, taskName='Outline Essay', workTime=01:20:30'}, Task{id=4, taskName='Write Introduction paragraph', workTime=01:20:30'}]}, TaskList{id=3, listName='Work on Indie Project', numberOfTasks=2, totalWorkTime='02:41', description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', workTime=01:20:30'}, Task{id=7, taskName='Complete code for REST API', workTime=01:20:30'}]}, TaskList{id=4, listName='Prep for presentation in IT class', numberOfTasks=1, totalWorkTime='01:20:30', description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', workTime=01:20:30'}]}, TaskList{id=5, listName='Design Moodboard', numberOfTasks=1, totalWorkTime='01:20:30', description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', workTime=01:20:30'}]}]
[DEBUG] 2022-11-12 10:42:39.601 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-11-12 10:42:39.887 [main] UserData - Searching for user with lastName = Smith
[INFO ] 2022-11-12 10:42:40.089 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', password='password4', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-11-12 10:42:40.254 [main] UserData - The list of users [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', password='password1', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', numberOfTasks=3, totalWorkTime='04:01:30', description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', workTime=01:20:30'}, Task{id=4, taskName='Write Introduction paragraph', workTime=01:20:30'}, Task{id=5, taskName='Write 1st body paragraph', workTime=01:20:30'}]}, TaskList{id=1, listName='Read Book For History Class', numberOfTasks=2, totalWorkTime='02:41', description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', workTime=01:20:30'}, Task{id=1, taskName='Read Chapter 16', workTime=01:20:30'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', password='password2', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', numberOfTasks=1, totalWorkTime='01:20:30', description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', workTime=01:20:30'}]}, TaskList{id=3, listName='Work on Indie Project', numberOfTasks=2, totalWorkTime='02:41', description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', workTime=01:20:30'}, Task{id=6, taskName='Research wanted API', workTime=01:20:30'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', password='password3', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', numberOfTasks=1, totalWorkTime='01:20:30', description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', workTime=01:20:30'}]}]}]
[DEBUG] 2022-11-15 16:12:27.949 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', workTime=01:20:30'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', workTime=01:20:30'}, Task{id=3, taskName='Outline Essay', workTime=01:20:30'}, Task{id=4, taskName='Write Introduction paragraph', workTime=01:20:30'}, Task{id=5, taskName='Write 1st body paragraph', workTime=01:20:30'}, Task{id=6, taskName='Research wanted API', workTime=01:20:30'}, Task{id=7, taskName='Complete code for REST API', workTime=01:20:30'}, Task{id=8, taskName='Write note cards for presentation', workTime=01:20:30'}, Task{id=9, taskName='Find photos that match my mood!', workTime=01:20:30'}]
[DEBUG] 2022-11-15 16:12:28.078 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-11-15 16:12:28.894 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', numberOfTasks=2, totalWorkTime='02:41', description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', workTime=01:20:30'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', workTime=01:20:30'}]}, TaskList{id=2, listName='Write Essay For English Class', numberOfTasks=3, totalWorkTime='04:01:30', description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', workTime=01:20:30'}, Task{id=3, taskName='Outline Essay', workTime=01:20:30'}, Task{id=4, taskName='Write Introduction paragraph', workTime=01:20:30'}]}, TaskList{id=3, listName='Work on Indie Project', numberOfTasks=2, totalWorkTime='02:41', description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', workTime=01:20:30'}, Task{id=7, taskName='Complete code for REST API', workTime=01:20:30'}]}, TaskList{id=4, listName='Prep for presentation in IT class', numberOfTasks=1, totalWorkTime='01:20:30', description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', workTime=01:20:30'}]}, TaskList{id=5, listName='Design Moodboard', numberOfTasks=1, totalWorkTime='01:20:30', description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', workTime=01:20:30'}]}]
[DEBUG] 2022-11-15 16:12:28.984 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-11-15 16:12:29.332 [main] UserData - Searching for user with lastName = Smith
[INFO ] 2022-11-15 16:12:29.598 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', password='password4', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-11-15 16:12:29.859 [main] UserData - The list of users [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', password='password1', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', numberOfTasks=3, totalWorkTime='04:01:30', description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', workTime=01:20:30'}, Task{id=5, taskName='Write 1st body paragraph', workTime=01:20:30'}, Task{id=4, taskName='Write Introduction paragraph', workTime=01:20:30'}]}, TaskList{id=1, listName='Read Book For History Class', numberOfTasks=2, totalWorkTime='02:41', description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', workTime=01:20:30'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', workTime=01:20:30'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', password='password2', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', numberOfTasks=1, totalWorkTime='01:20:30', description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', workTime=01:20:30'}]}, TaskList{id=3, listName='Work on Indie Project', numberOfTasks=2, totalWorkTime='02:41', description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', workTime=01:20:30'}, Task{id=7, taskName='Complete code for REST API', workTime=01:20:30'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', password='password3', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', numberOfTasks=1, totalWorkTime='01:20:30', description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', workTime=01:20:30'}]}]}]
[DEBUG] 2022-11-16 16:49:12.988 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', workTime=01:20:30'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', workTime=01:20:30'}, Task{id=3, taskName='Outline Essay', workTime=01:20:30'}, Task{id=4, taskName='Write Introduction paragraph', workTime=01:20:30'}, Task{id=5, taskName='Write 1st body paragraph', workTime=01:20:30'}, Task{id=6, taskName='Research wanted API', workTime=01:20:30'}, Task{id=7, taskName='Complete code for REST API', workTime=01:20:30'}, Task{id=8, taskName='Write note cards for presentation', workTime=01:20:30'}, Task{id=9, taskName='Find photos that match my mood!', workTime=01:20:30'}]
[DEBUG] 2022-11-16 16:49:13.084 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-11-16 16:49:13.673 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', numberOfTasks=2, totalWorkTime='02:41', description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', workTime=01:20:30'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', workTime=01:20:30'}]}, TaskList{id=2, listName='Write Essay For English Class', numberOfTasks=3, totalWorkTime='04:01:30', description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', workTime=01:20:30'}, Task{id=3, taskName='Outline Essay', workTime=01:20:30'}, Task{id=4, taskName='Write Introduction paragraph', workTime=01:20:30'}]}, TaskList{id=3, listName='Work on Indie Project', numberOfTasks=2, totalWorkTime='02:41', description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', workTime=01:20:30'}, Task{id=7, taskName='Complete code for REST API', workTime=01:20:30'}]}, TaskList{id=4, listName='Prep for presentation in IT class', numberOfTasks=1, totalWorkTime='01:20:30', description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', workTime=01:20:30'}]}, TaskList{id=5, listName='Design Moodboard', numberOfTasks=1, totalWorkTime='01:20:30', description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', workTime=01:20:30'}]}]
[DEBUG] 2022-11-16 16:49:13.743 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-11-16 16:49:14.099 [main] UserData - Searching for user with lastName = Smith
[INFO ] 2022-11-16 16:49:14.286 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', password='password4', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-11-16 16:49:14.459 [main] UserData - The list of users [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', password='password1', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', numberOfTasks=3, totalWorkTime='04:01:30', description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', workTime=01:20:30'}, Task{id=5, taskName='Write 1st body paragraph', workTime=01:20:30'}, Task{id=4, taskName='Write Introduction paragraph', workTime=01:20:30'}]}, TaskList{id=1, listName='Read Book For History Class', numberOfTasks=2, totalWorkTime='02:41', description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', workTime=01:20:30'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', workTime=01:20:30'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', password='password2', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', numberOfTasks=1, totalWorkTime='01:20:30', description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', workTime=01:20:30'}]}, TaskList{id=3, listName='Work on Indie Project', numberOfTasks=2, totalWorkTime='02:41', description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', workTime=01:20:30'}, Task{id=7, taskName='Complete code for REST API', workTime=01:20:30'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', password='password3', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', numberOfTasks=1, totalWorkTime='01:20:30', description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', workTime=01:20:30'}]}]}]
[DEBUG] 2022-11-16 18:24:01.088 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', workTime=01:20:30'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', workTime=01:20:30'}, Task{id=3, taskName='Outline Essay', workTime=01:20:30'}, Task{id=4, taskName='Write Introduction paragraph', workTime=01:20:30'}, Task{id=5, taskName='Write 1st body paragraph', workTime=01:20:30'}, Task{id=6, taskName='Research wanted API', workTime=01:20:30'}, Task{id=7, taskName='Complete code for REST API', workTime=01:20:30'}, Task{id=8, taskName='Write note cards for presentation', workTime=01:20:30'}, Task{id=9, taskName='Find photos that match my mood!', workTime=01:20:30'}]
[DEBUG] 2022-11-16 18:24:01.234 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-11-16 18:24:01.830 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', numberOfTasks=2, totalWorkTime='02:41', description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', workTime=01:20:30'}, Task{id=1, taskName='Read Chapter 16', workTime=01:20:30'}]}, TaskList{id=2, listName='Write Essay For English Class', numberOfTasks=3, totalWorkTime='04:01:30', description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', workTime=01:20:30'}, Task{id=3, taskName='Outline Essay', workTime=01:20:30'}, Task{id=5, taskName='Write 1st body paragraph', workTime=01:20:30'}]}, TaskList{id=3, listName='Work on Indie Project', numberOfTasks=2, totalWorkTime='02:41', description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', workTime=01:20:30'}, Task{id=6, taskName='Research wanted API', workTime=01:20:30'}]}, TaskList{id=4, listName='Prep for presentation in IT class', numberOfTasks=1, totalWorkTime='01:20:30', description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', workTime=01:20:30'}]}, TaskList{id=5, listName='Design Moodboard', numberOfTasks=1, totalWorkTime='01:20:30', description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', workTime=01:20:30'}]}]
[DEBUG] 2022-11-16 18:24:01.906 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-11-16 18:24:02.191 [main] UserData - Searching for user with lastName = Smith
[INFO ] 2022-11-16 18:24:02.407 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', password='password4', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-11-16 18:24:02.596 [main] UserData - The list of users [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', password='password1', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', numberOfTasks=3, totalWorkTime='04:01:30', description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', workTime=01:20:30'}, Task{id=4, taskName='Write Introduction paragraph', workTime=01:20:30'}, Task{id=5, taskName='Write 1st body paragraph', workTime=01:20:30'}]}, TaskList{id=1, listName='Read Book For History Class', numberOfTasks=2, totalWorkTime='02:41', description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', workTime=01:20:30'}, Task{id=1, taskName='Read Chapter 16', workTime=01:20:30'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', password='password2', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', numberOfTasks=2, totalWorkTime='02:41', description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', workTime=01:20:30'}, Task{id=6, taskName='Research wanted API', workTime=01:20:30'}]}, TaskList{id=4, listName='Prep for presentation in IT class', numberOfTasks=1, totalWorkTime='01:20:30', description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', workTime=01:20:30'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', password='password3', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', numberOfTasks=1, totalWorkTime='01:20:30', description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', workTime=01:20:30'}]}]}]
[DEBUG] 2022-11-16 20:29:05.425 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', workTime=01:20:30'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', workTime=01:20:30'}, Task{id=3, taskName='Outline Essay', workTime=01:20:30'}, Task{id=4, taskName='Write Introduction paragraph', workTime=01:20:30'}, Task{id=5, taskName='Write 1st body paragraph', workTime=01:20:30'}, Task{id=6, taskName='Research wanted API', workTime=01:20:30'}, Task{id=7, taskName='Complete code for REST API', workTime=01:20:30'}, Task{id=8, taskName='Write note cards for presentation', workTime=01:20:30'}, Task{id=9, taskName='Find photos that match my mood!', workTime=01:20:30'}]
[DEBUG] 2022-11-16 20:29:05.548 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-11-16 20:29:06.491 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', numberOfTasks=2, totalWorkTime='02:41', description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', workTime=01:20:30'}, Task{id=1, taskName='Read Chapter 16', workTime=01:20:30'}]}, TaskList{id=2, listName='Write Essay For English Class', numberOfTasks=3, totalWorkTime='04:01:30', description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', workTime=01:20:30'}, Task{id=5, taskName='Write 1st body paragraph', workTime=01:20:30'}, Task{id=3, taskName='Outline Essay', workTime=01:20:30'}]}, TaskList{id=3, listName='Work on Indie Project', numberOfTasks=2, totalWorkTime='02:41', description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', workTime=01:20:30'}, Task{id=6, taskName='Research wanted API', workTime=01:20:30'}]}, TaskList{id=4, listName='Prep for presentation in IT class', numberOfTasks=1, totalWorkTime='01:20:30', description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', workTime=01:20:30'}]}, TaskList{id=5, listName='Design Moodboard', numberOfTasks=1, totalWorkTime='01:20:30', description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', workTime=01:20:30'}]}]
[DEBUG] 2022-11-16 20:29:06.587 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-11-16 20:29:06.939 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-11-16 20:29:07.269 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', password='password4', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-11-16 20:29:07.546 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', password='password1', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', numberOfTasks=2, totalWorkTime='02:41', description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', workTime=01:20:30'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', workTime=01:20:30'}]}, TaskList{id=2, listName='Write Essay For English Class', numberOfTasks=3, totalWorkTime='04:01:30', description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', workTime=01:20:30'}, Task{id=5, taskName='Write 1st body paragraph', workTime=01:20:30'}, Task{id=3, taskName='Outline Essay', workTime=01:20:30'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', password='password2', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', numberOfTasks=2, totalWorkTime='02:41', description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', workTime=01:20:30'}, Task{id=6, taskName='Research wanted API', workTime=01:20:30'}]}, TaskList{id=4, listName='Prep for presentation in IT class', numberOfTasks=1, totalWorkTime='01:20:30', description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', workTime=01:20:30'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', password='password3', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', numberOfTasks=1, totalWorkTime='01:20:30', description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', workTime=01:20:30'}]}]}]
[DEBUG] 2022-11-16 20:30:59.833 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', numberOfTasks=2, totalWorkTime='02:41', description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', workTime=01:20:30'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', workTime=01:20:30'}]}, TaskList{id=2, listName='Write Essay For English Class', numberOfTasks=3, totalWorkTime='04:01:30', description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', workTime=01:20:30'}, Task{id=4, taskName='Write Introduction paragraph', workTime=01:20:30'}, Task{id=3, taskName='Outline Essay', workTime=01:20:30'}]}, TaskList{id=3, listName='Work on Indie Project', numberOfTasks=2, totalWorkTime='02:41', description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', workTime=01:20:30'}, Task{id=7, taskName='Complete code for REST API', workTime=01:20:30'}]}, TaskList{id=4, listName='Prep for presentation in IT class', numberOfTasks=1, totalWorkTime='01:20:30', description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', workTime=01:20:30'}]}, TaskList{id=5, listName='Design Moodboard', numberOfTasks=1, totalWorkTime='01:20:30', description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', workTime=01:20:30'}]}]
[DEBUG] 2022-11-16 20:30:59.937 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-11-16 20:31:16.025 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-11-16 20:31:16.459 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', password='password4', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-11-16 20:31:16.755 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', password='password1', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', numberOfTasks=3, totalWorkTime='04:01:30', description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', workTime=01:20:30'}, Task{id=5, taskName='Write 1st body paragraph', workTime=01:20:30'}, Task{id=3, taskName='Outline Essay', workTime=01:20:30'}]}, TaskList{id=1, listName='Read Book For History Class', numberOfTasks=2, totalWorkTime='02:41', description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', workTime=01:20:30'}, Task{id=1, taskName='Read Chapter 16', workTime=01:20:30'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', password='password2', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', numberOfTasks=2, totalWorkTime='02:41', description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', workTime=01:20:30'}, Task{id=6, taskName='Research wanted API', workTime=01:20:30'}]}, TaskList{id=4, listName='Prep for presentation in IT class', numberOfTasks=1, totalWorkTime='01:20:30', description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', workTime=01:20:30'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', password='password3', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', numberOfTasks=1, totalWorkTime='01:20:30', description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', workTime=01:20:30'}]}]}]
[DEBUG] 2022-11-16 20:31:28.719 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', numberOfTasks=2, totalWorkTime='02:41', description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', workTime=01:20:30'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', workTime=01:20:30'}]}, TaskList{id=2, listName='Write Essay For English Class', numberOfTasks=3, totalWorkTime='04:01:30', description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', workTime=01:20:30'}, Task{id=4, taskName='Write Introduction paragraph', workTime=01:20:30'}, Task{id=5, taskName='Write 1st body paragraph', workTime=01:20:30'}]}, TaskList{id=3, listName='Work on Indie Project', numberOfTasks=2, totalWorkTime='02:41', description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', workTime=01:20:30'}, Task{id=6, taskName='Research wanted API', workTime=01:20:30'}]}, TaskList{id=4, listName='Prep for presentation in IT class', numberOfTasks=1, totalWorkTime='01:20:30', description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', workTime=01:20:30'}]}, TaskList{id=5, listName='Design Moodboard', numberOfTasks=1, totalWorkTime='01:20:30', description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', workTime=01:20:30'}]}]
[DEBUG] 2022-11-16 20:31:28.822 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-11-16 20:33:22.480 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', workTime=01:20:30'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', workTime=01:20:30'}, Task{id=3, taskName='Outline Essay', workTime=01:20:30'}, Task{id=4, taskName='Write Introduction paragraph', workTime=01:20:30'}, Task{id=5, taskName='Write 1st body paragraph', workTime=01:20:30'}, Task{id=6, taskName='Research wanted API', workTime=01:20:30'}, Task{id=7, taskName='Complete code for REST API', workTime=01:20:30'}, Task{id=8, taskName='Write note cards for presentation', workTime=01:20:30'}, Task{id=9, taskName='Find photos that match my mood!', workTime=01:20:30'}]
[DEBUG] 2022-11-16 20:33:22.633 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-11-16 20:33:23.337 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', numberOfTasks=2, totalWorkTime='02:41', description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', workTime=01:20:30'}, Task{id=1, taskName='Read Chapter 16', workTime=01:20:30'}]}, TaskList{id=2, listName='Write Essay For English Class', numberOfTasks=3, totalWorkTime='04:01:30', description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', workTime=01:20:30'}, Task{id=5, taskName='Write 1st body paragraph', workTime=01:20:30'}, Task{id=4, taskName='Write Introduction paragraph', workTime=01:20:30'}]}, TaskList{id=3, listName='Work on Indie Project', numberOfTasks=2, totalWorkTime='02:41', description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', workTime=01:20:30'}, Task{id=6, taskName='Research wanted API', workTime=01:20:30'}]}, TaskList{id=4, listName='Prep for presentation in IT class', numberOfTasks=1, totalWorkTime='01:20:30', description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', workTime=01:20:30'}]}, TaskList{id=5, listName='Design Moodboard', numberOfTasks=1, totalWorkTime='01:20:30', description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', workTime=01:20:30'}]}]
[DEBUG] 2022-11-16 20:33:23.426 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-11-16 20:33:23.780 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-11-16 20:33:24.042 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', password='password4', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-11-16 20:33:24.354 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', password='password1', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', numberOfTasks=2, totalWorkTime='02:41', description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', workTime=01:20:30'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', workTime=01:20:30'}]}, TaskList{id=2, listName='Write Essay For English Class', numberOfTasks=3, totalWorkTime='04:01:30', description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', workTime=01:20:30'}, Task{id=4, taskName='Write Introduction paragraph', workTime=01:20:30'}, Task{id=5, taskName='Write 1st body paragraph', workTime=01:20:30'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', password='password2', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', numberOfTasks=1, totalWorkTime='01:20:30', description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', workTime=01:20:30'}]}, TaskList{id=3, listName='Work on Indie Project', numberOfTasks=2, totalWorkTime='02:41', description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', workTime=01:20:30'}, Task{id=7, taskName='Complete code for REST API', workTime=01:20:30'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', password='password3', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', numberOfTasks=1, totalWorkTime='01:20:30', description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', workTime=01:20:30'}]}]}]
[DEBUG] 2022-11-16 22:14:04.391 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', workTime=01:20:30'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', workTime=01:20:30'}, Task{id=3, taskName='Outline Essay', workTime=01:20:30'}, Task{id=4, taskName='Write Introduction paragraph', workTime=01:20:30'}, Task{id=5, taskName='Write 1st body paragraph', workTime=01:20:30'}, Task{id=6, taskName='Research wanted API', workTime=01:20:30'}, Task{id=7, taskName='Complete code for REST API', workTime=01:20:30'}, Task{id=8, taskName='Write note cards for presentation', workTime=01:20:30'}, Task{id=9, taskName='Find photos that match my mood!', workTime=01:20:30'}]
[DEBUG] 2022-11-16 22:14:04.566 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-11-16 22:14:05.491 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', numberOfTasks=2, totalWorkTime='02:41', description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', workTime=01:20:30'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', workTime=01:20:30'}]}, TaskList{id=2, listName='Write Essay For English Class', numberOfTasks=3, totalWorkTime='04:01:30', description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', workTime=01:20:30'}, Task{id=4, taskName='Write Introduction paragraph', workTime=01:20:30'}, Task{id=3, taskName='Outline Essay', workTime=01:20:30'}]}, TaskList{id=3, listName='Work on Indie Project', numberOfTasks=2, totalWorkTime='02:41', description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', workTime=01:20:30'}, Task{id=6, taskName='Research wanted API', workTime=01:20:30'}]}, TaskList{id=4, listName='Prep for presentation in IT class', numberOfTasks=1, totalWorkTime='01:20:30', description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', workTime=01:20:30'}]}, TaskList{id=5, listName='Design Moodboard', numberOfTasks=1, totalWorkTime='01:20:30', description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', workTime=01:20:30'}]}]
[DEBUG] 2022-11-16 22:14:05.570 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-11-16 22:14:06.257 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-11-16 22:14:06.547 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', password='password4', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-11-16 22:14:06.762 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', password='password1', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', numberOfTasks=2, totalWorkTime='02:41', description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', workTime=01:20:30'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', workTime=01:20:30'}]}, TaskList{id=2, listName='Write Essay For English Class', numberOfTasks=3, totalWorkTime='04:01:30', description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', workTime=01:20:30'}, Task{id=5, taskName='Write 1st body paragraph', workTime=01:20:30'}, Task{id=3, taskName='Outline Essay', workTime=01:20:30'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', password='password2', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', numberOfTasks=2, totalWorkTime='02:41', description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', workTime=01:20:30'}, Task{id=6, taskName='Research wanted API', workTime=01:20:30'}]}, TaskList{id=4, listName='Prep for presentation in IT class', numberOfTasks=1, totalWorkTime='01:20:30', description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', workTime=01:20:30'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', password='password3', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', numberOfTasks=1, totalWorkTime='01:20:30', description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', workTime=01:20:30'}]}]}]
[ERROR] 2022-11-16 22:50:12.459 [main] Database - SQL Exception
java.sql.SQLException: Data truncated for column 'tasklist_id' at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskDataTest.setUp(TaskDataTest.java:23) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[ERROR] 2022-11-16 23:09:08.619 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskDataTest.setUp(TaskDataTest.java:23) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[ERROR] 2022-11-16 23:09:18.987 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskDataTest.setUp(TaskDataTest.java:23) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[ERROR] 2022-11-16 23:09:22.696 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskDataTest.setUp(TaskDataTest.java:23) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[ERROR] 2022-11-16 23:09:22.801 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskDataTest.setUp(TaskDataTest.java:23) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[ERROR] 2022-11-16 23:09:22.900 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskDataTest.setUp(TaskDataTest.java:23) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[ERROR] 2022-11-16 23:09:22.999 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskDataTest.setUp(TaskDataTest.java:23) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[ERROR] 2022-11-16 23:09:23.090 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskDataTest.setUp(TaskDataTest.java:23) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[DEBUG] 2022-11-16 23:09:23.313 [main] GenericDao - The list of []
[ERROR] 2022-11-16 23:09:23.420 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskDataTest.setUp(TaskDataTest.java:23) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[DEBUG] 2022-11-16 23:09:23.425 [main] GenericDao - Searching for task with taskName = Write 
[ERROR] 2022-11-16 23:09:39.615 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskDataTest.setUp(TaskDataTest.java:23) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[ERROR] 2022-11-16 23:09:42.764 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskDataTest.setUp(TaskDataTest.java:23) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[ERROR] 2022-11-16 23:09:42.861 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskDataTest.setUp(TaskDataTest.java:23) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[ERROR] 2022-11-16 23:09:42.951 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskDataTest.setUp(TaskDataTest.java:23) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[ERROR] 2022-11-16 23:09:43.031 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskDataTest.setUp(TaskDataTest.java:23) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[ERROR] 2022-11-16 23:09:43.117 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskDataTest.setUp(TaskDataTest.java:23) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[DEBUG] 2022-11-16 23:09:43.309 [main] GenericDao - The list of []
[ERROR] 2022-11-16 23:09:43.397 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskDataTest.setUp(TaskDataTest.java:23) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[DEBUG] 2022-11-16 23:09:43.401 [main] GenericDao - Searching for task with taskName = Write 
[ERROR] 2022-11-16 23:10:47.919 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskDataTest.setUp(TaskDataTest.java:23) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[ERROR] 2022-11-16 23:11:59.029 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskDataTest.setUp(TaskDataTest.java:23) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[INFO ] 2022-11-16 23:12:02.130 [main] TaskDataTest - null
[ERROR] 2022-11-16 23:12:58.976 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskListDataTest.setUp(TaskListDataTest.java:26) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[ERROR] 2022-11-16 23:13:02.725 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskListDataTest.setUp(TaskListDataTest.java:26) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[ERROR] 2022-11-16 23:13:02.843 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskListDataTest.setUp(TaskListDataTest.java:26) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[ERROR] 2022-11-16 23:13:02.939 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskListDataTest.setUp(TaskListDataTest.java:26) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[ERROR] 2022-11-16 23:13:03.156 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskListDataTest.setUp(TaskListDataTest.java:26) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[DEBUG] 2022-11-16 23:13:03.382 [main] GenericDao - The list of []
[ERROR] 2022-11-16 23:13:03.505 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskListDataTest.setUp(TaskListDataTest.java:26) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[DEBUG] 2022-11-16 23:13:03.510 [main] GenericDao - Searching for task with listName =  Class
[ERROR] 2022-11-16 23:13:31.630 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskDataTest.setUp(TaskDataTest.java:23) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[INFO ] 2022-11-16 23:14:10.943 [main] TaskDataTest - edu.productivity.persistence.GenericDao@176b3f44
[ERROR] 2022-11-16 23:14:11.982 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskDataTest.setUp(TaskDataTest.java:24) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[ERROR] 2022-11-16 23:14:47.309 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskDataTest.setUp(TaskDataTest.java:24) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[ERROR] 2022-11-16 23:16:15.968 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskDataTest.setUp(TaskDataTest.java:24) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[ERROR] 2022-11-16 23:16:35.272 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskDataTest.setUp(TaskDataTest.java:24) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[ERROR] 2022-11-16 23:16:50.636 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskDataTest.setUp(TaskDataTest.java:24) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[ERROR] 2022-11-16 23:17:53.690 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskDataTest.setUp(TaskDataTest.java:24) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[INFO ] 2022-11-16 23:17:56.884 [main] TaskDataTest - edu.productivity.persistence.GenericDao@1d1c37d5
[ERROR] 2022-11-16 23:17:56.995 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskDataTest.setUp(TaskDataTest.java:24) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[INFO ] 2022-11-16 23:17:57.005 [main] TaskDataTest - null
[ERROR] 2022-11-16 23:17:57.102 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskDataTest.setUp(TaskDataTest.java:24) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[ERROR] 2022-11-16 23:17:57.210 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskDataTest.setUp(TaskDataTest.java:24) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[ERROR] 2022-11-16 23:17:57.349 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskDataTest.setUp(TaskDataTest.java:24) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[ERROR] 2022-11-16 23:17:57.457 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskDataTest.setUp(TaskDataTest.java:24) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[DEBUG] 2022-11-16 23:17:57.726 [main] GenericDao - The list of []
[ERROR] 2022-11-16 23:17:57.835 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskDataTest.setUp(TaskDataTest.java:24) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[DEBUG] 2022-11-16 23:17:57.841 [main] GenericDao - Searching for task with taskName = Write 
[ERROR] 2022-11-16 23:23:24.310 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskDataTest.setUp(TaskDataTest.java:24) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[ERROR] 2022-11-16 23:24:31.566 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskDataTest.setUp(TaskDataTest.java:24) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[ERROR] 2022-11-16 23:25:00.747 [main] Database - SQL Exception
java.sql.SQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails (`productivityapp`.`task`, CONSTRAINT `task_tasklist_fk` FOREIGN KEY (`tasklist_id`) REFERENCES `tasklist` (`id`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskDataTest.setUp(TaskDataTest.java:24) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[INFO ] 2022-11-16 23:27:28.910 [main] TaskDataTest - edu.productivity.persistence.GenericDao@46702c26
[INFO ] 2022-11-16 23:27:29.066 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-11-16 23:27:30.116 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-11-16 23:27:30.241 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-11-16 23:27:56.785 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-11-16 23:29:28.296 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-11-16 23:31:33.768 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-11-16 23:31:34.363 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', password='password4', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-11-16 23:42:38.858 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', password='password1', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', password='password2', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', password='password3', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-11-16 23:42:58.083 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-11-16 23:43:21.931 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', password='password1', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', password='password2', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', password='password3', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-11-16 23:54:19.646 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-11-16 23:54:19.773 [main] GenericDao - Searching for task with listName =  Class
[INFO ] 2022-11-17 00:18:21.940 [main] TaskDataTest - edu.productivity.persistence.GenericDao@7657d90b
[INFO ] 2022-11-17 00:18:22.084 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-11-17 00:18:22.808 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-11-17 00:18:22.900 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-11-17 00:18:23.526 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-11-17 00:18:23.605 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-11-17 00:18:23.849 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-11-17 00:18:24.080 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', password='password4', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-11-17 00:18:24.302 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', password='password1', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', password='password2', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', password='password3', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-11-17 00:37:37.107 [main] TaskDataTest - edu.productivity.persistence.GenericDao@7657d90b
[INFO ] 2022-11-17 00:37:37.242 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-11-17 00:37:38.013 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-11-17 00:37:38.102 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-11-17 00:37:38.669 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-11-17 00:37:38.776 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-11-17 00:37:39.047 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-11-17 00:37:39.307 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', password='password4', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-11-17 00:37:39.528 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', password='password1', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', password='password2', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', password='password3', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-11-17 01:03:15.602 [main] TaskDataTest - edu.productivity.persistence.GenericDao@7657d90b
[INFO ] 2022-11-17 01:03:15.720 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-11-17 01:03:16.404 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-11-17 01:03:16.488 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-11-17 01:03:17.069 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-11-17 01:03:17.143 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-11-17 01:03:17.399 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-11-17 01:03:17.585 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', password='password4', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-11-17 01:03:17.759 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', password='password1', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', password='password2', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', password='password3', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-11-17 01:08:45.440 [main] TaskDataTest - edu.productivity.persistence.GenericDao@7657d90b
[INFO ] 2022-11-17 01:08:45.645 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-11-17 01:08:46.939 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-11-17 01:08:47.071 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-11-17 01:08:48.063 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-11-17 01:08:48.190 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-11-17 01:08:48.652 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-11-17 01:08:48.948 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', password='password4', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-11-17 01:08:49.224 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', password='password1', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', password='password2', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', password='password3', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-11-17 01:11:51.257 [main] TaskDataTest - edu.productivity.persistence.GenericDao@7657d90b
[INFO ] 2022-11-17 01:11:51.453 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-11-17 01:11:52.359 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-11-17 01:11:52.483 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-11-17 01:11:53.180 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-11-17 01:11:53.268 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-11-17 01:11:53.575 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-11-17 01:11:53.756 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', password='password4', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-11-17 01:11:53.923 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', password='password1', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', password='password2', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', password='password3', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-11-17 01:25:28.074 [main] TaskDataTest - edu.productivity.persistence.GenericDao@7657d90b
[INFO ] 2022-11-17 01:25:28.205 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-11-17 01:25:28.906 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-11-17 01:25:28.993 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-11-17 01:25:29.670 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-11-17 01:25:29.784 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-11-17 01:25:30.185 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-11-17 01:25:30.404 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', password='password4', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-11-17 01:25:30.668 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', password='password1', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', password='password2', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', password='password3', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-11-22 15:46:11.171 [main] TaskDataTest - edu.productivity.persistence.GenericDao@7657d90b
[INFO ] 2022-11-22 15:46:11.395 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-11-22 15:46:12.236 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-11-22 15:46:12.350 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-11-22 15:46:13.022 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-11-22 15:46:13.136 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-11-22 15:46:13.577 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-11-22 15:46:13.842 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', password='password4', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-11-22 15:46:14.117 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', password='password1', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', password='password2', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', password='password3', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-11-22 15:50:55.642 [main] TaskDataTest - edu.productivity.persistence.GenericDao@7657d90b
[INFO ] 2022-11-22 15:50:55.852 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-11-22 15:50:57.337 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-11-22 15:50:57.517 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-11-22 15:50:58.455 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-11-22 15:50:58.631 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-11-22 15:50:59.084 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-11-22 15:50:59.386 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', password='password4', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-11-22 15:50:59.631 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', password='password1', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', password='password2', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', password='password3', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-11-22 16:03:38.462 [main] TaskDataTest - edu.productivity.persistence.GenericDao@7657d90b
[INFO ] 2022-11-22 16:03:38.726 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-11-22 16:03:40.108 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-11-22 16:03:40.309 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-11-22 16:03:41.202 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-11-22 16:03:41.317 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-11-22 16:03:41.638 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-11-22 16:03:41.847 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', password='password4', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-11-22 16:03:42.063 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', password='password1', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', password='password2', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', password='password3', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-11-22 18:18:00.688 [main] TaskDataTest - edu.productivity.persistence.GenericDao@7657d90b
[INFO ] 2022-11-22 18:18:00.835 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-11-22 18:18:01.608 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-11-22 18:18:01.719 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-11-22 18:18:02.386 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-11-22 18:18:02.481 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-11-22 18:18:02.760 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-11-22 18:18:02.959 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', password='password4', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-11-22 18:18:03.136 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', password='password1', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', password='password2', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', password='password3', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-11-22 18:23:47.859 [main] TaskDataTest - edu.productivity.persistence.GenericDao@7657d90b
[INFO ] 2022-11-22 18:23:48.096 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-11-22 18:23:49.534 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-11-22 18:23:49.680 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-11-22 18:23:50.672 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-11-22 18:23:50.790 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-11-22 18:23:51.178 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-11-22 18:23:51.484 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', password='password4', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-11-22 18:23:51.764 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', password='password1', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', password='password2', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', password='password3', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-11-22 18:30:50.484 [main] TaskDataTest - edu.productivity.persistence.GenericDao@3dbb3fb7
[INFO ] 2022-11-22 18:30:50.665 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-11-22 18:30:51.401 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-11-22 18:30:51.495 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-11-22 18:30:52.114 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-11-22 18:30:52.211 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-11-22 18:30:52.504 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-11-22 18:30:52.707 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', password='password4', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-11-22 18:30:52.922 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', password='password1', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', password='password2', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', password='password3', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-11-22 18:35:29.779 [main] TaskDataTest - edu.productivity.persistence.GenericDao@7657d90b
[INFO ] 2022-11-22 18:35:29.913 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-11-22 18:35:30.662 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-11-22 18:35:30.773 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-11-22 18:35:31.452 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-11-22 18:35:31.551 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-11-22 18:35:31.850 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-11-22 18:35:32.051 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', password='password4', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-11-22 18:35:32.261 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', password='password1', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', password='password2', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', password='password3', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-11-23 17:23:39.399 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[INFO ] 2022-11-28 16:13:36.797 [main] TaskDataTest - edu.productivity.persistence.GenericDao@7657d90b
[INFO ] 2022-11-28 16:13:36.923 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-11-28 16:13:37.775 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-11-28 16:13:37.880 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-11-28 16:13:38.494 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-11-28 16:13:38.580 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-11-28 16:13:38.873 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-11-28 16:13:39.052 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', password='password4', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-11-28 16:13:39.243 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', password='password1', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', password='password2', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', password='password3', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[ERROR] 2022-11-28 16:20:00.585 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskDataTest.setUp(TaskDataTest.java:24) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeSingleClass(JUnitPlatformProvider.java:144) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:126) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:105) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:286) [surefire-booter-2.19.jar:2.19]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:240) [surefire-booter-2.19.jar:2.19]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121) [surefire-booter-2.19.jar:2.19]
[ERROR] 2022-11-28 16:20:04.412 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskDataTest.setUp(TaskDataTest.java:24) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeSingleClass(JUnitPlatformProvider.java:144) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:126) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:105) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:286) [surefire-booter-2.19.jar:2.19]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:240) [surefire-booter-2.19.jar:2.19]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121) [surefire-booter-2.19.jar:2.19]
[INFO ] 2022-11-28 16:20:04.422 [main] TaskDataTest - null
[ERROR] 2022-11-28 16:20:04.520 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskDataTest.setUp(TaskDataTest.java:24) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeSingleClass(JUnitPlatformProvider.java:144) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:126) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:105) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:286) [surefire-booter-2.19.jar:2.19]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:240) [surefire-booter-2.19.jar:2.19]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121) [surefire-booter-2.19.jar:2.19]
[ERROR] 2022-11-28 16:20:04.648 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskDataTest.setUp(TaskDataTest.java:24) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeSingleClass(JUnitPlatformProvider.java:144) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:126) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:105) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:286) [surefire-booter-2.19.jar:2.19]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:240) [surefire-booter-2.19.jar:2.19]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121) [surefire-booter-2.19.jar:2.19]
[ERROR] 2022-11-28 16:20:04.780 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskDataTest.setUp(TaskDataTest.java:24) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeSingleClass(JUnitPlatformProvider.java:144) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:126) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:105) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:286) [surefire-booter-2.19.jar:2.19]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:240) [surefire-booter-2.19.jar:2.19]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121) [surefire-booter-2.19.jar:2.19]
[ERROR] 2022-11-28 16:20:04.960 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskDataTest.setUp(TaskDataTest.java:24) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeSingleClass(JUnitPlatformProvider.java:144) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:126) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:105) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:286) [surefire-booter-2.19.jar:2.19]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:240) [surefire-booter-2.19.jar:2.19]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121) [surefire-booter-2.19.jar:2.19]
[DEBUG] 2022-11-28 16:20:05.262 [main] GenericDao - The list of []
[ERROR] 2022-11-28 16:20:05.364 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskDataTest.setUp(TaskDataTest.java:24) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeSingleClass(JUnitPlatformProvider.java:144) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:126) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:105) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:286) [surefire-booter-2.19.jar:2.19]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:240) [surefire-booter-2.19.jar:2.19]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121) [surefire-booter-2.19.jar:2.19]
[DEBUG] 2022-11-28 16:20:05.369 [main] GenericDao - Searching for task with taskName = Write 
[ERROR] 2022-11-28 16:20:05.485 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskListDataTest.setUp(TaskListDataTest.java:28) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeSingleClass(JUnitPlatformProvider.java:144) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:126) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:105) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:286) [surefire-booter-2.19.jar:2.19]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:240) [surefire-booter-2.19.jar:2.19]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121) [surefire-booter-2.19.jar:2.19]
[ERROR] 2022-11-28 16:20:05.579 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskListDataTest.setUp(TaskListDataTest.java:28) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeSingleClass(JUnitPlatformProvider.java:144) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:126) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:105) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:286) [surefire-booter-2.19.jar:2.19]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:240) [surefire-booter-2.19.jar:2.19]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121) [surefire-booter-2.19.jar:2.19]
[ERROR] 2022-11-28 16:20:05.676 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskListDataTest.setUp(TaskListDataTest.java:28) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeSingleClass(JUnitPlatformProvider.java:144) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:126) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:105) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:286) [surefire-booter-2.19.jar:2.19]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:240) [surefire-booter-2.19.jar:2.19]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121) [surefire-booter-2.19.jar:2.19]
[ERROR] 2022-11-28 16:20:05.741 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskListDataTest.setUp(TaskListDataTest.java:28) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeSingleClass(JUnitPlatformProvider.java:144) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:126) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:105) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:286) [surefire-booter-2.19.jar:2.19]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:240) [surefire-booter-2.19.jar:2.19]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121) [surefire-booter-2.19.jar:2.19]
[ERROR] 2022-11-28 16:20:05.883 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskListDataTest.setUp(TaskListDataTest.java:28) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeSingleClass(JUnitPlatformProvider.java:144) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:126) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:105) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:286) [surefire-booter-2.19.jar:2.19]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:240) [surefire-booter-2.19.jar:2.19]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121) [surefire-booter-2.19.jar:2.19]
[DEBUG] 2022-11-28 16:20:05.890 [main] GenericDao - The list of []
[ERROR] 2022-11-28 16:20:05.939 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.TaskListDataTest.setUp(TaskListDataTest.java:28) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeSingleClass(JUnitPlatformProvider.java:144) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:126) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:105) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:286) [surefire-booter-2.19.jar:2.19]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:240) [surefire-booter-2.19.jar:2.19]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121) [surefire-booter-2.19.jar:2.19]
[DEBUG] 2022-11-28 16:20:05.940 [main] GenericDao - Searching for task with listName =  Class
[ERROR] 2022-11-28 16:20:06.006 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.UserDataTest.setUp(UserDataTest.java:34) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeSingleClass(JUnitPlatformProvider.java:144) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:126) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:105) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:286) [surefire-booter-2.19.jar:2.19]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:240) [surefire-booter-2.19.jar:2.19]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121) [surefire-booter-2.19.jar:2.19]
[ERROR] 2022-11-28 16:20:06.054 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.UserDataTest.setUp(UserDataTest.java:34) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeSingleClass(JUnitPlatformProvider.java:144) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:126) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:105) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:286) [surefire-booter-2.19.jar:2.19]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:240) [surefire-booter-2.19.jar:2.19]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121) [surefire-booter-2.19.jar:2.19]
[ERROR] 2022-11-28 16:20:06.136 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.UserDataTest.setUp(UserDataTest.java:34) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeSingleClass(JUnitPlatformProvider.java:144) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:126) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:105) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:286) [surefire-booter-2.19.jar:2.19]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:240) [surefire-booter-2.19.jar:2.19]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121) [surefire-booter-2.19.jar:2.19]
[DEBUG] 2022-11-28 16:20:06.139 [main] GenericDao - Searching for task with lastName = Smith
[ERROR] 2022-11-28 16:20:06.200 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.UserDataTest.setUp(UserDataTest.java:34) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeSingleClass(JUnitPlatformProvider.java:144) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:126) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:105) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:286) [surefire-booter-2.19.jar:2.19]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:240) [surefire-booter-2.19.jar:2.19]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121) [surefire-booter-2.19.jar:2.19]
[ERROR] 2022-11-28 16:20:06.250 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.UserDataTest.setUp(UserDataTest.java:34) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeSingleClass(JUnitPlatformProvider.java:144) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:126) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:105) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:286) [surefire-booter-2.19.jar:2.19]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:240) [surefire-booter-2.19.jar:2.19]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121) [surefire-booter-2.19.jar:2.19]
[INFO ] 2022-11-28 16:20:06.268 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[ERROR] 2022-11-28 16:20:06.321 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.UserDataTest.setUp(UserDataTest.java:34) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeSingleClass(JUnitPlatformProvider.java:144) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:126) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:105) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:286) [surefire-booter-2.19.jar:2.19]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:240) [surefire-booter-2.19.jar:2.19]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121) [surefire-booter-2.19.jar:2.19]
[ERROR] 2022-11-28 16:20:06.375 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.UserDataTest.setUp(UserDataTest.java:34) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeSingleClass(JUnitPlatformProvider.java:144) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:126) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.junit.platform.surefire.provider.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:105) [junit-platform-surefire-provider-1.0.0.jar:1.0.0]
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:286) [surefire-booter-2.19.jar:2.19]
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:240) [surefire-booter-2.19.jar:2.19]
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121) [surefire-booter-2.19.jar:2.19]
[DEBUG] 2022-11-28 16:20:06.381 [main] GenericDao - The list of []
[ERROR] 2022-11-28 16:21:25.260 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.UserDataTest.setUp(UserDataTest.java:34) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[ERROR] 2022-11-28 16:21:29.514 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.UserDataTest.setUp(UserDataTest.java:34) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[ERROR] 2022-11-28 16:21:29.763 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.UserDataTest.setUp(UserDataTest.java:34) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[DEBUG] 2022-11-28 16:21:29.769 [main] GenericDao - Searching for task with lastName = Smith
[ERROR] 2022-11-28 16:21:30.060 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.UserDataTest.setUp(UserDataTest.java:34) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[ERROR] 2022-11-28 16:21:30.140 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.UserDataTest.setUp(UserDataTest.java:34) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[INFO ] 2022-11-28 16:21:30.156 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[ERROR] 2022-11-28 16:21:30.212 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.UserDataTest.setUp(UserDataTest.java:34) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[ERROR] 2022-11-28 16:21:30.297 [main] Database - SQL Exception
java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdateInternal(StatementImpl.java:1355) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeLargeUpdate(StatementImpl.java:2128) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1264) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at edu.productivity.test.util.Database.runSQL(Database.java:110) ~[test-classes/:?]
	at edu.productivity.persistence.UserDataTest.setUp(UserDataTest.java:34) ~[test-classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:389) ~[junit-platform-commons-1.0.0.jar:1.0.0]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.invokeMethodInExtensionContext(ClassTestDescriptor.java:289) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.ClassTestDescriptor.lambda$synthesizeBeforeEachMethodAdapter$11(ClassTestDescriptor.java:277) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$null$2(TestMethodTestDescriptor.java:132) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:152) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachMethods(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:106) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150) ~[?:?]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57) [junit5-rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11) [idea_rt.jar:?]
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:235) [junit-rt.jar:?]
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]
[DEBUG] 2022-11-28 16:21:30.310 [main] GenericDao - The list of []
[DEBUG] 2022-11-28 16:21:53.131 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-11-28 16:21:53.528 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-11-28 16:21:53.820 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-11-28 16:22:15.937 [main] TaskDataTest - edu.productivity.persistence.GenericDao@2c7ad4f3
[INFO ] 2022-11-28 16:22:16.082 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-11-28 16:22:16.827 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-11-28 16:22:16.943 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-11-28 16:22:17.506 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-11-28 16:22:17.583 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-11-28 16:22:17.848 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-11-28 16:22:18.034 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-11-28 16:22:18.239 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-11-28 16:33:31.413 [main] TaskDataTest - edu.productivity.persistence.GenericDao@2c7ad4f3
[INFO ] 2022-11-28 16:33:31.562 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-11-28 16:33:33.044 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-11-28 16:33:33.210 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-11-28 16:33:33.995 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-11-28 16:33:34.321 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-11-28 16:33:34.858 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-11-28 16:33:35.203 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-11-28 16:33:35.530 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-11-28 17:04:26.958 [main] TaskDataTest - edu.productivity.persistence.GenericDao@2c7ad4f3
[INFO ] 2022-11-28 17:04:27.110 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-11-28 17:04:27.828 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-11-28 17:04:27.920 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-11-28 17:04:28.541 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-11-28 17:04:28.669 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-11-28 17:04:28.935 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-11-28 17:04:29.115 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-11-28 17:04:29.323 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-11-28 17:13:29.328 [main] TaskDataTest - edu.productivity.persistence.GenericDao@2c7ad4f3
[INFO ] 2022-11-28 17:13:29.489 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-11-28 17:13:30.475 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-11-28 17:13:30.603 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-11-28 17:13:31.382 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-11-28 17:13:31.494 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-11-28 17:13:31.944 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-11-28 17:13:32.258 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-11-28 17:13:32.527 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-11-28 17:29:05.226 [main] TaskDataTest - edu.productivity.persistence.GenericDao@2c7ad4f3
[INFO ] 2022-11-28 17:29:05.366 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-11-28 17:29:06.085 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-11-28 17:29:06.195 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-11-28 17:29:06.872 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-11-28 17:29:06.960 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-11-28 17:29:07.246 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-11-28 17:29:07.453 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-11-28 17:29:07.658 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-11-28 18:04:41.577 [main] TaskDataTest - edu.productivity.persistence.GenericDao@2c7ad4f3
[INFO ] 2022-11-28 18:04:41.706 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-11-28 18:04:42.481 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-11-28 18:04:42.573 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-11-28 18:04:43.192 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-11-28 18:04:43.280 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-11-28 18:04:43.537 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-11-28 18:04:43.776 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-11-28 18:04:43.992 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-11-28 18:09:26.185 [main] TaskDataTest - edu.productivity.persistence.GenericDao@2c7ad4f3
[INFO ] 2022-11-28 18:09:26.300 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-11-28 18:09:27.139 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-11-28 18:09:27.232 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-11-28 18:09:27.800 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-11-28 18:09:27.881 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-11-28 18:09:28.136 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-11-28 18:09:28.392 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-11-28 18:09:28.628 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-11-29 16:45:02.152 [main] TaskDataTest - edu.productivity.persistence.GenericDao@2c7ad4f3
[INFO ] 2022-11-29 16:45:02.271 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-11-29 16:45:02.941 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-11-29 16:45:03.098 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-11-29 16:45:03.651 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-11-29 16:45:03.729 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-11-29 16:45:04.094 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-11-29 16:45:04.363 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-11-29 16:45:04.585 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-11-29 16:48:36.506 [main] TaskDataTest - edu.productivity.persistence.GenericDao@2c7ad4f3
[INFO ] 2022-11-29 16:48:36.635 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-11-29 16:48:37.392 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-11-29 16:48:37.472 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-11-29 16:48:38.046 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-11-29 16:48:38.128 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-11-29 16:48:38.394 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-11-29 16:48:38.608 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-11-29 16:48:38.821 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-12-01 18:50:01.316 [main] TaskDataTest - edu.productivity.persistence.GenericDao@2c7ad4f3
[INFO ] 2022-12-01 18:50:01.427 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-12-01 18:50:02.207 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-01 18:50:02.304 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-01 18:50:02.864 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-01 18:50:02.935 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-01 18:50:03.198 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-01 18:50:03.378 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-01 18:50:03.549 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-12-01 18:50:28.040 [main] TaskDataTest - edu.productivity.persistence.GenericDao@2c7ad4f3
[INFO ] 2022-12-01 18:50:28.151 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-12-01 18:50:28.837 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-01 18:50:28.948 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-01 18:50:29.527 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-01 18:50:29.603 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-01 18:50:29.929 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-01 18:50:30.112 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-01 18:50:30.285 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-12-01 19:03:13.776 [main] TaskDataTest - edu.productivity.persistence.GenericDao@2c7ad4f3
[INFO ] 2022-12-01 19:03:13.984 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-12-01 19:03:15.214 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-01 19:03:15.344 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-01 19:03:16.244 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-01 19:03:16.399 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-01 19:03:16.915 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-01 19:03:17.197 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-01 19:03:17.486 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-12-01 19:11:48.659 [main] TaskDataTest - edu.productivity.persistence.GenericDao@2c7ad4f3
[INFO ] 2022-12-01 19:11:48.857 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-12-01 19:11:50.314 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-01 19:11:50.453 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-01 19:11:51.493 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-01 19:11:51.604 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-01 19:11:51.971 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-01 19:11:52.288 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-01 19:11:52.583 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-12-01 19:18:23.245 [main] TaskDataTest - edu.productivity.persistence.GenericDao@2c7ad4f3
[INFO ] 2022-12-01 19:18:23.438 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-12-01 19:18:25.142 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-01 19:18:25.274 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-01 19:18:26.257 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-01 19:18:26.375 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-01 19:18:26.850 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-01 19:18:27.161 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-01 19:18:27.426 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-12-01 20:01:46.611 [main] TaskDataTest - edu.productivity.persistence.GenericDao@2c7ad4f3
[INFO ] 2022-12-01 20:01:46.739 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-12-01 20:01:47.427 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-01 20:01:47.508 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-01 20:01:48.107 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-01 20:01:48.186 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-01 20:01:48.475 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-01 20:01:48.732 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-01 20:01:48.978 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-12-02 17:45:31.822 [main] TaskDataTest - edu.productivity.persistence.GenericDao@2c7ad4f3
[INFO ] 2022-12-02 17:45:31.934 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-12-02 17:45:32.670 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-02 17:45:32.771 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-02 17:45:33.376 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-02 17:45:33.476 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-02 17:45:33.743 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-02 17:45:33.935 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-02 17:45:34.120 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-12-02 17:55:40.686 [main] TaskDataTest - edu.productivity.persistence.GenericDao@2c7ad4f3
[INFO ] 2022-12-02 17:55:40.806 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-12-02 17:55:41.612 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-02 17:55:41.709 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-02 17:55:42.395 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-02 17:55:42.520 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-02 17:55:42.820 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-02 17:55:43.019 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-02 17:55:43.207 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-12-05 18:07:23.237 [main] TaskDataTest - edu.productivity.persistence.GenericDao@2c7ad4f3
[INFO ] 2022-12-05 18:07:23.373 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-12-05 18:07:24.293 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-05 18:07:24.402 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-05 18:07:25.212 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-05 18:07:25.359 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-05 18:07:25.888 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-05 18:07:26.123 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-05 18:07:26.378 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-12-05 18:41:38.458 [main] TaskDataTest - edu.productivity.persistence.GenericDao@2c7ad4f3
[INFO ] 2022-12-05 18:41:38.576 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-12-05 18:41:39.316 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-05 18:41:39.413 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-05 18:41:40.121 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-05 18:41:40.226 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-05 18:41:40.498 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-05 18:41:40.777 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-05 18:41:40.999 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-12-05 18:53:58.949 [main] TaskDataTest - edu.productivity.persistence.GenericDao@2c7ad4f3
[INFO ] 2022-12-05 18:53:59.103 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-12-05 18:53:59.914 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-05 18:54:00.017 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-05 18:54:00.768 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-05 18:54:00.869 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-05 18:54:01.171 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-05 18:54:01.381 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-05 18:54:01.585 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-12-05 18:56:10.392 [main] TaskDataTest - edu.productivity.persistence.GenericDao@2c7ad4f3
[INFO ] 2022-12-05 18:56:10.510 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-12-05 18:56:11.178 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-05 18:56:11.288 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-05 18:56:11.913 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-05 18:56:11.994 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-05 18:56:12.328 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-05 18:56:12.535 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-05 18:56:12.723 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-12-05 19:01:52.541 [main] TaskDataTest - edu.productivity.persistence.GenericDao@2c7ad4f3
[INFO ] 2022-12-05 19:01:52.678 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-12-05 19:01:53.425 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-05 19:01:53.513 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-05 19:01:54.091 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-05 19:01:54.174 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-05 19:01:54.455 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-05 19:01:54.667 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-05 19:01:54.838 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-12-08 13:03:25.701 [main] TaskDataTest - edu.productivity.persistence.GenericDao@36525ab
[INFO ] 2022-12-08 13:03:25.873 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-12-08 13:03:28.381 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-08 13:03:28.532 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-08 13:03:30.390 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-08 13:03:30.513 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-08 13:03:31.188 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-08 13:03:31.721 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-08 13:03:32.357 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-12-08 14:02:05.633 [main] TaskDataTest - edu.productivity.persistence.GenericDao@2c7ad4f3
[INFO ] 2022-12-08 14:02:05.778 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-12-08 14:02:06.644 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-08 14:02:06.747 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-08 14:02:07.412 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-08 14:02:07.496 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-08 14:02:07.913 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-08 14:02:08.160 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-08 14:02:08.429 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-12-08 14:13:08.614 [main] TaskDataTest - edu.productivity.persistence.GenericDao@2c7ad4f3
[INFO ] 2022-12-08 14:13:08.755 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-12-08 14:13:09.898 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-08 14:13:10.009 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-08 14:13:10.850 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-08 14:13:10.985 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-08 14:13:11.289 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-08 14:13:11.619 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-08 14:13:11.883 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-12-09 19:36:05.067 [main] TaskDataTest - edu.productivity.persistence.GenericDao@2c7ad4f3
[INFO ] 2022-12-09 19:36:05.185 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-12-09 19:36:05.924 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-09 19:36:06.013 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-09 19:36:06.624 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-09 19:36:06.726 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-09 19:36:06.997 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-09 19:36:07.191 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-09 19:36:07.381 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-12-09 22:31:29.250 [main] TaskDataTest - edu.productivity.persistence.GenericDao@2c7ad4f3
[INFO ] 2022-12-09 22:31:29.390 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-12-09 22:31:30.084 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-09 22:31:30.188 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-09 22:31:30.825 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-09 22:31:30.908 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-09 22:31:31.191 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-09 22:31:31.407 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-09 22:31:31.643 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-12-09 22:41:35.480 [main] TaskDataTest - edu.productivity.persistence.GenericDao@2c7ad4f3
[INFO ] 2022-12-09 22:41:35.620 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-12-09 22:41:36.559 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-09 22:41:36.669 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-09 22:41:37.379 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-09 22:41:37.474 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-09 22:41:37.777 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-09 22:41:37.964 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-09 22:41:38.146 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-12-10 12:28:37.331 [main] TaskDataTest - edu.productivity.persistence.GenericDao@2c7ad4f3
[INFO ] 2022-12-10 12:28:37.477 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-12-10 12:28:38.287 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-10 12:28:38.382 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-10 12:28:38.995 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-10 12:28:39.088 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-10 12:28:39.368 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-10 12:28:39.652 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-10 12:28:39.855 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-12-10 12:40:32.214 [main] TaskDataTest - edu.productivity.persistence.GenericDao@2c7ad4f3
[INFO ] 2022-12-10 12:40:32.353 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-12-10 12:40:33.141 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-10 12:40:33.252 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-10 12:40:33.989 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-10 12:40:34.094 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-10 12:40:34.385 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-10 12:40:34.636 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-10 12:40:34.845 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-12-10 12:44:41.602 [main] TaskDataTest - edu.productivity.persistence.GenericDao@2c7ad4f3
[INFO ] 2022-12-10 12:44:41.735 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-12-10 12:44:42.418 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-10 12:44:42.524 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-10 12:44:43.128 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-10 12:44:43.204 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-10 12:44:43.528 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-10 12:44:43.820 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-10 12:44:44.083 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-12-10 12:52:44.573 [main] TaskDataTest - edu.productivity.persistence.GenericDao@2c7ad4f3
[INFO ] 2022-12-10 12:52:44.730 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-12-10 12:52:45.534 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-10 12:52:45.649 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-10 12:52:46.310 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-10 12:52:46.405 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-10 12:52:46.696 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-10 12:52:46.941 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-10 12:52:47.139 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-12-10 13:06:59.721 [main] TaskDataTest - edu.productivity.persistence.GenericDao@2c7ad4f3
[INFO ] 2022-12-10 13:06:59.885 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-12-10 13:07:01.304 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-10 13:07:01.539 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-10 13:07:03.104 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-10 13:07:03.230 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-10 13:07:03.636 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-10 13:07:03.921 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-10 13:07:04.123 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-12-10 16:16:15.922 [main] TaskDataTest - edu.productivity.persistence.GenericDao@2c7ad4f3
[INFO ] 2022-12-10 16:16:16.059 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-12-10 16:16:17.250 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-10 16:16:17.377 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-10 16:16:19.067 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-10 16:16:19.196 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-10 16:16:19.575 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-10 16:16:19.856 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-10 16:16:20.126 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-12-11 12:07:27.568 [main] TaskDataTest - edu.productivity.persistence.GenericDao@2c7ad4f3
[INFO ] 2022-12-11 12:07:27.851 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-12-11 12:07:28.779 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-11 12:07:28.935 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-11 12:07:29.966 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-11 12:07:30.100 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-11 12:07:30.578 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-11 12:07:30.891 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-11 12:07:31.182 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-12-11 12:14:22.103 [main] TaskDataTest - edu.productivity.persistence.GenericDao@2c7ad4f3
[INFO ] 2022-12-11 12:14:22.395 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-12-11 12:14:23.660 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-11 12:14:23.829 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-11 12:14:24.718 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-11 12:14:24.961 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-11 12:14:25.686 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-11 12:14:26.442 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-11 12:14:26.921 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-12-11 12:17:36.172 [main] TaskDataTest - edu.productivity.persistence.GenericDao@2c7ad4f3
[INFO ] 2022-12-11 12:17:36.302 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-12-11 12:17:37.043 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-11 12:17:37.136 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-11 12:17:37.796 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-11 12:17:37.881 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-11 12:17:38.188 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-11 12:17:38.478 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-11 12:17:38.683 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-12-11 12:22:19.436 [main] TaskDataTest - edu.productivity.persistence.GenericDao@2c7ad4f3
[INFO ] 2022-12-11 12:22:19.562 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-12-11 12:22:20.258 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-11 12:22:20.351 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-11 12:22:20.919 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-11 12:22:21.015 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-11 12:22:21.300 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-11 12:22:21.614 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-11 12:22:21.865 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-12-11 12:28:12.061 [main] TaskDataTest - edu.productivity.persistence.GenericDao@2c7ad4f3
[INFO ] 2022-12-11 12:28:12.187 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-12-11 12:28:12.906 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-11 12:28:13.025 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-11 12:28:13.654 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-11 12:28:13.749 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-11 12:28:14.079 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-11 12:28:14.329 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-11 12:28:14.518 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-12-11 12:30:49.098 [main] TaskDataTest - edu.productivity.persistence.GenericDao@2c7ad4f3
[INFO ] 2022-12-11 12:30:49.255 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-12-11 12:30:50.107 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-11 12:30:50.238 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-11 12:30:50.960 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-11 12:30:51.053 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-11 12:30:51.407 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-11 12:30:51.676 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-11 12:30:51.918 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-11 12:37:42.985 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-11 12:40:05.994 [main] TaskDataTest - edu.productivity.persistence.GenericDao@2c7ad4f3
[INFO ] 2022-12-11 12:40:06.144 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-12-11 12:40:07.007 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-11 12:40:07.118 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-11 12:40:07.760 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-11 12:40:07.851 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-11 12:40:08.154 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-11 12:40:08.420 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-11 12:40:08.635 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-12-11 12:52:28.070 [main] TaskDataTest - edu.productivity.persistence.GenericDao@2c7ad4f3
[INFO ] 2022-12-11 12:52:28.363 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-12-11 12:52:29.903 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-11 12:52:30.074 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-11 12:52:31.687 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-11 12:52:32.075 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-11 12:52:32.818 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-11 12:52:33.331 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-11 12:52:33.842 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-12-11 12:55:26.546 [main] TaskDataTest - edu.productivity.persistence.GenericDao@2c7ad4f3
[INFO ] 2022-12-11 12:55:26.676 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-12-11 12:55:27.409 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-11 12:55:27.512 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-11 12:55:28.214 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-11 12:55:28.294 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-11 12:55:28.624 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-11 12:55:28.886 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-11 12:55:29.081 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-12-11 13:19:02.358 [main] TaskDataTest - edu.productivity.persistence.GenericDao@2c7ad4f3
[INFO ] 2022-12-11 13:19:02.623 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-12-11 13:19:03.735 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-11 13:19:03.888 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-11 13:19:04.771 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-11 13:19:04.899 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-11 13:19:05.318 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-11 13:19:05.611 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-11 13:19:05.885 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[INFO ] 2022-12-11 13:44:29.527 [main] UserDataTest - 2016-12-10
[INFO ] 2022-12-11 13:46:34.589 [main] TaskDataTest - edu.productivity.persistence.GenericDao@2c7ad4f3
[INFO ] 2022-12-11 13:46:34.738 [main] TaskDataTest - Task{id=3, taskName='Outline Essay', isComplete=false'}
[DEBUG] 2022-12-11 13:46:35.615 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-11 13:46:35.718 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-11 13:46:36.439 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-11 13:46:36.558 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-11 13:46:36.930 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-11 13:46:37.169 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-11 13:46:37.387 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-11 13:54:25.851 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-11 13:54:25.941 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-11 13:54:26.527 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-11 13:54:26.638 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-11 13:54:26.901 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-11 13:54:27.118 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-11 13:54:27.304 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-11 13:59:45.714 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-11 13:59:45.825 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-11 13:59:46.434 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-11 13:59:46.513 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-11 13:59:46.889 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-11 13:59:47.099 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-11 13:59:47.286 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-11 14:03:35.502 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-11 14:03:35.609 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-11 14:03:36.309 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-11 14:03:36.418 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-11 14:03:36.705 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-11 14:03:36.936 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-11 14:03:37.172 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-11 14:07:58.365 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-11 14:07:58.475 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-11 14:07:59.078 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-11 14:07:59.157 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-11 14:07:59.442 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-11 14:07:59.665 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-11 14:07:59.871 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-11 14:16:16.012 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-11 14:16:16.131 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-11 14:16:16.802 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-11 14:16:16.927 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-11 14:16:17.243 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-11 14:16:17.436 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-11 14:16:17.706 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-11 14:21:57.689 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-11 14:21:57.802 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-11 14:21:58.409 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-11 14:21:58.518 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-11 14:21:58.999 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-11 14:21:59.350 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-11 14:21:59.617 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-11 15:24:25.378 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-11 15:24:25.495 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-11 15:24:26.266 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-11 15:24:26.394 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-11 15:24:27.345 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-11 15:24:27.545 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-11 15:24:27.787 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-11 15:25:05.628 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-11 15:25:05.732 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-11 15:25:06.312 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-11 15:25:06.388 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-11 15:25:06.717 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-11 15:25:06.984 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-11 15:25:07.209 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-11 15:29:10.748 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-11 15:29:10.859 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-11 15:29:11.529 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-11 15:29:11.615 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-11 15:29:11.949 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-11 15:29:12.155 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-11 15:29:12.377 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-11 15:33:49.720 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-11 15:33:49.814 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-11 15:33:50.502 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-11 15:33:50.583 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-11 15:33:50.927 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-11 15:33:51.117 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-11 15:33:51.324 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-11 15:39:27.566 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-11 15:39:27.692 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-11 15:39:28.346 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-11 15:39:28.429 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-11 15:39:28.777 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-11 15:39:29.044 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-11 15:39:29.232 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-11 15:45:10.160 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-11 15:45:10.302 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-11 15:45:11.347 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-11 15:45:11.443 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-11 15:45:11.727 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-11 15:45:11.934 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-11 15:45:12.140 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-11 15:54:45.868 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-11 15:54:45.995 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-11 15:54:46.873 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-11 15:54:46.970 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-11 15:54:47.370 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-11 15:54:47.662 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-11 15:54:47.909 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-11 16:01:51.480 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-11 16:01:51.575 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-11 16:01:52.146 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-11 16:01:52.231 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-11 16:01:52.548 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-11 16:01:52.769 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-11 16:01:52.988 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-11 16:05:51.607 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-11 16:05:51.698 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-11 16:05:52.268 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-11 16:05:52.350 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-11 16:05:52.656 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-11 16:05:52.880 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-11 16:05:53.094 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-11 16:28:24.760 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-11 16:28:24.877 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-11 16:28:25.611 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-11 16:28:25.703 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-11 16:28:25.987 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-11 16:28:26.193 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-11 16:28:26.412 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-11 16:42:13.082 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-11 16:42:13.204 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-11 16:42:13.846 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-11 16:42:13.924 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-11 16:42:14.230 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-11 16:42:14.448 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-11 16:42:14.792 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-11 16:45:30.622 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-11 16:45:30.724 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-11 16:45:31.448 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-11 16:45:31.534 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-11 16:45:31.828 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-11 16:45:32.044 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-11 16:45:32.261 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-11 16:48:29.173 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-11 16:48:29.280 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-11 16:48:29.938 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-11 16:48:30.036 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-11 16:48:30.323 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-11 16:48:30.537 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-11 16:48:30.751 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-11 19:05:38.609 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-11 19:05:38.726 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-11 19:05:39.996 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-11 19:05:40.084 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-11 19:05:40.492 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-11 19:05:40.763 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-11 19:05:41.173 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-11 19:18:03.332 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-11 19:18:03.442 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-11 19:18:04.040 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-11 19:18:04.175 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-11 19:18:04.626 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-11 19:18:04.852 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-11 19:18:05.035 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-11 19:22:35.341 [main] GenericDao - Searching for task with user_id =  1
[DEBUG] 2022-12-11 19:22:57.406 [main] GenericDao - Searching for task with user =  1
[DEBUG] 2022-12-11 19:23:20.649 [main] GenericDao - Searching for task with user = 1
[DEBUG] 2022-12-11 19:24:36.088 [main] GenericDao - Searching for task with user = 1
[DEBUG] 2022-12-11 19:26:00.646 [main] GenericDao - Searching for task with user = 1
[DEBUG] 2022-12-11 19:32:25.428 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-11 19:42:21.611 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-11 19:45:41.302 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-11 19:45:41.452 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-11 19:45:41.831 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-11 19:45:42.238 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-11 19:45:42.362 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-11 19:45:42.730 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-11 19:45:43.040 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-11 19:45:43.314 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-11 19:50:53.063 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-11 19:50:53.180 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-11 19:50:53.776 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-11 19:50:54.271 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-11 19:50:54.391 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-11 19:50:54.731 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-11 19:50:54.930 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-11 19:50:55.116 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-11 20:01:01.323 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-11 20:01:01.416 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-11 20:01:01.787 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-11 20:01:02.257 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-11 20:01:02.373 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-11 20:01:02.771 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-11 20:01:02.993 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-11 20:01:03.188 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-11 20:05:38.943 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-11 20:05:39.068 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-11 20:05:39.753 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-11 20:05:40.320 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-11 20:05:40.427 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-11 20:05:40.773 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-11 20:05:41.063 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-11 20:05:41.380 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-11 20:16:18.181 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-11 20:16:18.311 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-11 20:16:18.881 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-11 20:16:19.436 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-11 20:16:19.531 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-11 20:16:19.901 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-11 20:16:20.205 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-11 20:16:20.474 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-12 16:17:00.500 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-12 16:17:00.658 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-12 16:17:01.201 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-12 16:17:01.645 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-12 16:17:01.788 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-12 16:17:02.167 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-12 16:17:02.512 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-12 16:17:02.855 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-12 16:31:46.175 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-12 16:31:46.332 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-12 16:31:46.902 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-12 16:31:47.282 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-12 16:31:47.371 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-12 16:31:47.690 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-12 16:31:47.888 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-12 16:31:48.066 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-12 16:49:43.156 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-12 16:49:43.266 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-12 16:49:43.608 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-12 16:49:44.144 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-12 16:49:44.265 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-12 16:49:44.654 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-12 16:49:44.901 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-12 16:49:45.115 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-12 16:58:58.860 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-12 16:58:58.980 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-12 16:58:59.380 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-12 16:58:59.862 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-12 16:59:00.100 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-12 16:59:00.585 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-12 16:59:00.940 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-12 16:59:01.358 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-12 17:06:36.006 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-12 17:06:36.100 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-12 17:06:36.458 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-12 17:06:36.897 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-12 17:06:36.982 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-12 17:06:37.263 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-12 17:06:37.507 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-12 17:06:37.775 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-12 17:08:27.129 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-12 17:08:27.220 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-12 17:08:27.542 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-12 17:08:27.919 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-12 17:08:28.029 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-12 17:08:28.287 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-12 17:08:28.526 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-12 17:08:28.729 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-12 17:14:45.780 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-12 17:14:45.869 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-12 17:14:46.211 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-12 17:14:46.574 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-12 17:14:46.646 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-12 17:14:47.003 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-12 17:14:47.242 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-12 17:14:47.502 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-12 18:53:43.065 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-12 18:53:43.211 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-12 18:53:43.709 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-12 18:53:44.313 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-12 18:53:44.402 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-12 18:53:44.778 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-12 18:53:45.045 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-12 18:53:45.319 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-12 19:10:52.616 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-12 19:10:52.738 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-12 19:10:53.247 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-12 19:10:53.816 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-12 19:10:53.935 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-12 19:10:54.315 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-12 19:10:54.590 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-12 19:10:54.869 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-12 19:34:28.934 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-12 19:34:29.065 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-12 19:34:29.623 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-12 19:34:30.203 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-12 19:34:30.306 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-12 19:34:30.693 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-12 19:34:30.967 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-12 19:34:31.233 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-13 10:13:11.438 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-13 10:13:11.544 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-13 10:13:11.935 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-13 10:13:12.327 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-13 10:13:12.413 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-13 10:13:12.700 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-13 10:13:12.980 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-13 10:13:13.217 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-13 10:25:09.082 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-13 10:25:09.184 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-13 10:25:09.530 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-13 10:25:09.907 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-13 10:25:09.986 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-13 10:25:10.250 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-13 10:25:10.452 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-13 10:25:10.713 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-13 10:53:18.717 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-13 10:53:18.844 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-13 10:53:19.155 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-13 10:53:19.477 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-13 10:53:19.557 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-13 10:53:19.937 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-13 10:53:20.156 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-13 10:53:20.363 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-13 11:01:36.322 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-13 11:01:36.416 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-13 11:01:36.766 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-13 11:01:37.136 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-13 11:01:37.219 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-13 11:01:37.523 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-13 11:01:37.834 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-13 11:01:38.111 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-13 11:51:31.974 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-13 11:51:32.063 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-13 11:51:32.415 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-13 11:51:32.798 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-13 11:51:32.879 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-13 11:51:33.130 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-13 11:51:33.308 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-13 11:51:33.537 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-13 12:00:21.412 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-13 12:00:21.495 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-13 12:00:21.845 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-13 12:00:22.238 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-13 12:00:22.318 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-13 12:00:22.598 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-13 12:00:22.790 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-13 12:00:23.041 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-13 12:10:42.874 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-13 12:10:42.981 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-13 12:10:43.363 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-13 12:10:43.756 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-13 12:10:43.860 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-13 12:10:44.157 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-13 12:10:44.366 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-13 12:10:44.555 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-13 12:21:48.047 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-13 12:21:48.157 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-13 12:21:48.679 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-13 12:21:49.077 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-13 12:21:49.219 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-13 12:21:49.542 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-13 12:21:49.817 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-13 12:21:50.029 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-13 15:24:34.197 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-13 15:24:34.341 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-13 15:24:34.902 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-13 15:24:35.483 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-13 15:24:35.589 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-13 15:24:35.985 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-13 15:24:36.266 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-13 15:24:36.557 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-13 15:32:51.546 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-13 15:32:51.666 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-13 15:32:52.143 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-13 15:32:52.699 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-13 15:32:52.966 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-13 15:32:53.548 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-13 15:32:53.821 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-13 15:32:54.232 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-13 15:34:12.212 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-13 15:34:12.320 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-13 15:34:12.690 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-13 15:34:13.171 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-13 15:34:13.258 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-13 15:34:13.705 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-13 15:34:14.035 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-13 15:34:14.367 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-13 15:37:21.796 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-13 15:37:21.927 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-13 15:37:22.430 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-13 15:37:22.994 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-13 15:37:23.082 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-13 15:37:23.479 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-13 15:37:23.781 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-13 15:37:24.036 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-13 15:51:59.446 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-13 15:51:59.551 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-13 15:51:59.930 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-13 15:52:00.283 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-13 15:52:00.353 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-13 15:52:00.598 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-13 15:52:00.766 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-13 15:52:00.934 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-13 15:58:44.510 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-13 15:58:44.636 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-13 15:58:45.062 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-13 15:58:45.602 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-13 15:58:45.694 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-13 15:58:46.012 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-13 15:58:46.268 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-13 15:58:46.492 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-13 15:59:43.378 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-13 15:59:43.505 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-13 15:59:43.802 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-13 15:59:44.125 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-13 15:59:44.197 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-13 15:59:44.440 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-13 15:59:44.619 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-13 15:59:44.805 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-13 16:03:35.060 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-13 16:03:35.220 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-13 16:03:35.706 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-13 16:03:36.145 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-13 16:03:36.279 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-13 16:03:36.586 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-13 16:03:36.779 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-13 16:03:36.997 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-13 16:11:59.063 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-13 16:11:59.145 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-13 16:11:59.457 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-13 16:11:59.814 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-13 16:11:59.892 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-13 16:12:00.257 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-13 16:12:00.527 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-13 16:12:00.795 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-13 16:16:47.565 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-13 16:16:47.717 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-13 16:16:48.414 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-13 16:16:49.166 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-13 16:16:49.272 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-13 16:16:49.618 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-13 16:16:49.963 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-13 16:16:50.596 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-13 16:19:55.379 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-13 16:19:55.464 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-13 16:19:55.893 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-13 16:19:56.212 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-13 16:19:56.290 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-13 16:19:56.515 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-13 16:19:56.683 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-13 16:19:56.861 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-13 16:24:09.048 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-13 16:24:09.125 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-13 16:24:09.415 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-13 16:24:09.726 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-13 16:24:09.789 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-13 16:24:10.026 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-13 16:24:10.198 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-13 16:24:10.371 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-13 16:25:11.491 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-13 16:25:11.577 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-13 16:25:11.901 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-13 16:25:12.205 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-13 16:25:12.290 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-13 16:25:12.540 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-13 16:25:12.713 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-13 16:25:12.893 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-13 16:38:29.570 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-13 16:38:29.722 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-13 16:38:30.191 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-13 16:38:30.735 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-13 16:38:30.835 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-13 16:38:31.201 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-13 16:38:31.458 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-13 16:38:31.704 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-13 16:49:42.230 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-13 16:49:42.361 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-13 16:49:42.910 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-13 16:49:43.532 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-13 16:49:43.650 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-13 16:49:44.148 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-13 16:49:44.437 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-13 16:49:44.709 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-13 16:50:45.405 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-13 16:50:45.481 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-13 16:50:45.834 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-13 16:50:46.238 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-13 16:50:46.337 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-13 16:50:46.620 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-13 16:50:46.788 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-13 16:50:46.973 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-13 17:00:01.408 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-13 17:00:01.556 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-13 17:00:02.141 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-13 17:00:02.726 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-13 17:00:02.816 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-13 17:00:03.226 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-13 17:00:03.486 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-13 17:00:03.809 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-13 17:08:27.945 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-13 17:08:28.077 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-13 17:08:28.743 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-13 17:08:29.382 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-13 17:08:29.499 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-13 17:08:29.922 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-13 17:08:30.196 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-13 17:08:30.615 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-13 17:17:49.565 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-13 17:17:49.697 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-13 17:17:50.277 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-13 17:17:50.944 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-13 17:17:51.067 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-13 17:17:51.479 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-13 17:17:51.754 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-13 17:17:52.022 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-13 17:22:43.104 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-13 17:22:43.195 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-13 17:22:43.561 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-13 17:22:43.958 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=1, taskName='Read Chapter 16', isComplete=true'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-13 17:22:44.049 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-13 17:22:44.346 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-13 17:22:44.574 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-13 17:22:44.781 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
[DEBUG] 2022-12-13 17:29:03.767 [main] GenericDao - The list of [Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}, Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=8, taskName='Write note cards for presentation', isComplete=true'}, Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]
[DEBUG] 2022-12-13 17:29:03.865 [main] GenericDao - Searching for task with taskName = Write 
[DEBUG] 2022-12-13 17:29:04.290 [main] GenericDao - Searching for user with listName = Read Book For History Class
[DEBUG] 2022-12-13 17:29:04.712 [main] GenericDao - The list of [TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}, TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=3, taskName='Outline Essay', isComplete=false'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}, TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]
[DEBUG] 2022-12-13 17:29:04.799 [main] GenericDao - Searching for task with listName =  Class
[DEBUG] 2022-12-13 17:29:05.096 [main] GenericDao - Searching for task with lastName = Smith
[INFO ] 2022-12-13 17:29:05.292 [main] UserDataTest - User{id=0, firstName='Felix', lastName='Montgomery', userName='fMontgomery', dateOfBirth=1968-01-01, email='Monty68@yahoo.com', taskLists=[]}
[DEBUG] 2022-12-13 17:29:05.472 [main] GenericDao - The list of [User{id=1, firstName='Ellen', lastName='Smith', userName='eSmith45', dateOfBirth=1968-01-01, email='eSmith@yahoo.com', taskLists=[TaskList{id=2, listName='Write Essay For English Class', totalWorkTime=04:01:30, dueDate=2022-11-20, description='Write persuasive essay for English Class before Tuesday', tasks=[Task{id=3, taskName='Outline Essay', isComplete=false'}, Task{id=5, taskName='Write 1st body paragraph', isComplete=false'}, Task{id=4, taskName='Write Introduction paragraph', isComplete=true'}]}, TaskList{id=1, listName='Read Book For History Class', totalWorkTime=02:41, dueDate=2022-11-22, description='Read American History before Saturday', tasks=[Task{id=1, taskName='Read Chapter 16', isComplete=true'}, Task{id=2, taskName='Outline Chapter 16 themes and topics', isComplete=false'}]}]}, User{id=2, firstName='Alex', lastName='Martin', userName='aMartin32', dateOfBirth=1999-02-14, email='Martin99@gmail.com', taskLists=[TaskList{id=4, listName='Prep for presentation in IT class', totalWorkTime=01:20:30, dueDate=2022-11-29, description='Outline work for presentation before Midnight', tasks=[Task{id=8, taskName='Write note cards for presentation', isComplete=true'}]}, TaskList{id=3, listName='Work on Indie Project', totalWorkTime=02:41, dueDate=2022-11-19, description='Complete steps 1 and 2 of the indie project', tasks=[Task{id=7, taskName='Complete code for REST API', isComplete=false'}, Task{id=6, taskName='Research wanted API', isComplete=false'}]}]}, User{id=3, firstName='Morgan', lastName='Matthews', userName='mMatthews21', dateOfBirth=2001-03-16, email='mm2001@yahoo.com', taskLists=[TaskList{id=5, listName='Design Moodboard', totalWorkTime=01:20:30, dueDate=2022-11-28, description='Create Moodboard before Monday', tasks=[Task{id=9, taskName='Find photos that match my mood!', isComplete=false'}]}]}]
